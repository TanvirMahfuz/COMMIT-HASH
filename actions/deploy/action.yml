name: Deploy Docker to VM
description: Pull and run Docker container on remote VM

inputs:
  vm-ip:
    required: true
    description: "IP address of the VM"
  vm-user:
    required: true
    description: "SSH user"
  dockerhub-username:
    required: true
    description: "DockerHub username"
  ssh-private-key:
    required: true

runs:
  using: "composite"
  steps:
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ inputs.ssh-private-key }}

    - name: Deploy Docker container
      shell: bash
      run: |
        # --------------- CONFIGURATION ---------------
        IMAGE="${{ inputs.dockerhub-username }}/simple-github-commit-hash-printer:latest"
        CONTAINER_NAME="hash-printer"

        # --------------- SCRIPT START ----------------
        echo "===== Starting Docker Deployment Script ====="

        echo "===== Checking if the image exists locally ====="
        if docker image inspect "$IMAGE" >/dev/null 2>&1; then
          echo "Old image exists locally."


          echo "===== Checking for running containers using this image ====="
          RUNNING_CONTAINERS=$(docker ps -q --filter ancestor="$IMAGE")


          if [ -n "$RUNNING_CONTAINERS" ]; then
            echo "===== Stopping running containers ====="
            docker stop $RUNNING_CONTAINERS


            echo "===== Removing stopped containers and their volumes ====="
            docker rm -v $RUNNING_CONTAINERS
          else
            echo "No running containers found for this image."
          fi

          echo "===== Removing old image ====="
          docker rmi -f "$IMAGE"
        else
          echo "No old image found locally."
        fi

        echo "===== Pulling new image ====="
        docker pull "$IMAGE"

        echo "===== Running new container ====="
        docker run -d --name "$CONTAINER_NAME" -p 3000:3000 "$IMAGE"

        echo "===== Deployment Completed Successfully ====="
